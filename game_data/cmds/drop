inherit command
c = command.new('drop')

	
function c:ExecuteCommand ( o_orig, cmd )

	s_type = o_orig:GetType()
	
	if (s_type:lower() ~= "player" and s_type:lower() ~= "npc") then
		return false;
	end
	
	o = living_cast(o_orig)
	if ( o == nil ) then 
		return false 
	end	
	
	local myTable = cmd:split( ' ' )
	if #myTable ~= 2 then
		usage(o)
		return true;
	end
	
	-- remove drop portion
	table.remove(myTable, 1)
	
	local s1 = myTable[1]
	
	--local my_o = o:RightHand:GetItem()
	
	--if( my_o ~= nil and my_o:GetName
	bfound = false
	if( o:RightHand():IsEmpty() == false ) then
		local item = o:RightHand():GetItem()--:GetItemNoun():lower()
	
		if( item:GetItemNoun():lower():starts(s1)
			or item:GetItemPluralNoun():lower():starts(s1)) then
			local room = o:GetRoom()
			--item = o:RightHand():GetItem()
			room:AddToInventory( item )	
			o:SendToPlayer('You drop ' .. item:GetName() .. '.')	
			local pname = string.gsub(o:GetName(), "(%a)([%w_']*)", titleCase)
			o:SendToRoom( pname .. ' drops ' .. item:GetName() .. '.')
			return true
		end

	end
	
	if( o:LeftHand():IsEmpty() == false ) then
		local item = o:LeftHand():GetItem()
	
		if( item:GetItemNoun():lower():starts(s1) 
			or item:GetItemPluralNoun():lower():starts(s1)) then
			local room = o:GetRoom()
			--itemobj = o:LeftHand():GetItem():GetItemNoun():lower()
			room:AddToInventory( item )	
			o:SendToPlayer('You drop ' .. item:GetName() .. '.')	
			local pname = string.gsub(o:GetName(), "(%a)([%w_']*)", titleCase)
			o:SendToRoom( pname .. ' drops ' .. item:GetName() .. '.')
			return true
		end
	end
	
	o:SendToPlayer('Drop what?')
	return true
end

function usage(o_orig)
	o_orig:SendToEntity('USAGE: drop <Implement me later>')
end
