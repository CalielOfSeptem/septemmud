--[[enter version:0.0.1]]-------------------------------
--[[------------------------------------------------------
	Enter command allows a player to enter a door or other object that accepts the command such as a portal
	
	Copyright (C) 2018, by Caliel (kenthompson1@gmail.com)
	All Rights Reserved.
	
	## 0.0.1 - 2018-02-10
	###
	- Initial release
--]]------------------------------------------------------
inherit command
c = command.new('enter')


function c:ExecuteCommand ( o_orig, cmd )

	local myTable = cmd:split( ' ' )
	if #myTable ~= 2 then
		usage(o)
		return true;
	end
	
	-- remove enter portion
	table.remove(myTable, 1)
	local cmd = table.concat(myTable, " ") -- put it back together
	
	local s_num = string.match(cmd, '%d+')
	local skip_index = 1 -- don't skip by default
	if( s_num ~= nil ) then
		skip_index = s_num
		cmd = string.match(cmd, '%a+')
		--print(s1)
	end
	
	s_type = o_orig:GetType()
	if (s_type:lower() ~= "player" and s_type:lower() ~= "npc") then
		return true;
	end
	
	ob = living_cast(o_orig)
	
	local doors = ob:GetRoom():GetDoors()
	for i = 1, #doors do
		local maybe_door = doors[i]:GetName():split( ' ' )
		table.remove(maybe_door, 1) -- remove a or an
		local door_name = table.concat(maybe_door, " ") -- put it back together

		if( door_name:lower():find(cmd) ) then
			skip_index = skip_index - 1
			if ( skip_index ~= 0 ) then goto continue end -- keep looking
			if( ob:GetBodyPosition() ~= entityBodyPosition.standing ) then
				ob:SendToEntity( 'You must be standing to move.' )
				return true
			end
			--print('found it! '  .. doors[i]:GetName())
			
			if( doors[i]:GetIsOpen() ~= true ) then
				ob:SendToEntity( 'The ' .. door_name .. ' is closed.')
				return true
			end
			
			ob:SendToEntity('You go through the ' .. door_name .. '. \r\n')
			pname = string.gsub(ob:GetName(), "(%a)([%w_']*)", titleCase)
			ob:SendToRoom(pname .. ' goes through the ' .. door_name .. '. \r\n')
			move_living( ob, doors[i]:GetDoorPath() )
			ob:SendToRoom(pname .. ' just arrived.\r\n')
			ob:DoCommand("look")
		end
		::continue::
	end					

	return false
end

function usage(o_orig)
	o_orig:SendToEntity('USAGE: enter <Implement me later>')
end