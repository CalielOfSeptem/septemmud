inherit command
c = command.new('move')
--c:SetVerb("move")

    function traceback ()
      local level = 1
      while true do
        local info = debug.getinfo(level, "Sl")
        if not info then break end
        if info.what == "C" then   -- is a C function?
          print(level, "C function")
        else   -- a Lua function
          print(string.format("[%s]:%d",
                              info.short_src, info.currentline))
        end
        level = level + 1
      end
    end
	
function c:ExecuteCommand ( o_orig, cmd )
--	print(debug.traceback())
--	traceback()
	--print('--- Move command ---')
	--print(inspect(_ENV))
	s_type = o_orig:GetType()
	--print(s_type)
	if (s_type:lower() ~= "player" and s_type:lower() ~= "npc") then
		--print('Cannot call move on a non-living entity..')
		return true;
	end
	ob = o_orig
	
	exits = ob:GetRoom():GetExits()
	--f(exits);
						
	for k, v in ipairs(exits) do
		--exitobj = v:GetExit()
		
		for k1, v1 in ipairs (v:GetExit()) do
			if v1 == cmd then
				if( ob:GetBodyPosition() ~= entityBodyPosition.standing ) then
					ob:SendToEntity( 'You must be standing to move.' )
					return true
				end
				--print('Identified exit, exit = ' .. v1 .. ', path = ' .. v:GetExitPath() )
				ob:SendToEntity('You go ' .. v:GetExit()[1] .. '. \r\n')
				pname = string.gsub(ob:GetName(), "(%a)([%w_']*)", titleCase)
				ob:SendToRoom(pname .. ' goes ' .. v:GetExit()[1] .. '. \r\n')
				move_living( ob, v:GetExitPath() )
				ob:SendToRoom(pname .. ' just arrived.\r\n')
				ob:DoCommand("look")

				return true;
			end
		end
	end
	--print(cmd)
	--print(cmd[0])
	
	
	if( cmd:lower():starts('n') ) then
		--print('here')
		ob:SendToEntity('Go where? That exit does not exist.\r\n')
		return true
	end
	if( cmd:lower():starts('e') ) then
		ob:SendToEntity('Go where? That exit does not exist.\r\n')
		return true
	end
	if( cmd:lower():starts('s') ) then
		ob:SendToEntity('Go where? That exit does not exist.\r\n')
		return true
	end
	if( cmd:lower():starts('w') ) then
		ob:SendToEntity('Go where? That exit does not exist.\r\n')
		return true
	end
	return false
end

