inherit command
c = command.new('move')
--c:SetVerb("move")

    function traceback ()
      local level = 1
      while true do
        local info = debug.getinfo(level, "Sl")
        if not info then break end
        if info.what == "C" then   -- is a C function?
          print(level, "C function")
        else   -- a Lua function
          print(string.format("[%s]:%d",
                              info.short_src, info.currentline))
        end
        level = level + 1
      end
    end
	
function c:ExecuteCommand ( o_orig, cmd )
--	print(debug.traceback())
--	traceback()
	--print('--- Move command ---')
	--print(inspect(_ENV))
	s_type = o_orig:GetType()
	print(s_type)
	if (s_type:lower() ~= "player" and s_type:lower() ~= "npc") then
		print('Cannot call move on a non-living entity..')
		return false;
	end
	exits = o_orig:GetRoom():GetExits()
	--f(exits);
						
	for k, v in pairs(exits) do
		--exitobj = v:GetExit()
		
		for k1, v1 in pairs (v:GetExit()) do
			if v1 == cmd then
				--print('Identified exit, exit = ' .. v1 .. ', path = ' .. v:GetExitPath() )
				o_orig:SendToEntity('You go ' .. v:GetExit()[1] .. '. \r\n')
				move_living( o_orig, v:GetExitPath() )
				o_orig:DoCommand("look")

				return true;
			end
		end
	end
end

