inherit command
c = command.new('wear')

function c:PrintItemCountError( o_orig, item )
		local worn_items = o_orig:GetItemsAtInventorySlot( item:GetInventorySlot() )
		--local body_slot = 
		if( worn_items ) then
			if( #worn_items == 1 ) then
				o_orig:SendToPlayer('You try to put on ' .. item:GetName() .. ' but you are already wearing too many items of that type.') 
				o_orig:SendToPlayer('\r\nHint: You might consider REMoving some items like your ' .. worn_items[1]:GetItemNoun() .. ' to free up some space.')
				return true
			end
			local s = ''
			for i = 1, #worn_items do
				str = ' the ' .. worn_items[i]:GetItemNoun()
				--if i ~= #worn_items then
				--	str = str .. ' '
				if ( #worn_items > 2 ) then
					if( i ~= #worn_items ) then
						str = str .. ','
						else
						str = ' or' .. str
					end
					else
						if( i ~= #worn_items ) then
						--str = str .. ','
						else
						str = ' or' .. str
						end
					--str =  ' or' .. str
				end
				s = s .. str
			end
			
			--o_orig:SendToPlayer('You try to put on ' .. item:GetName() .. ' but you are already wearing ' .. s .. ' in that slot.')
				o_orig:SendToPlayer('You try to put on ' .. item:GetName() .. ' but you are already wearing too many items of that type.') -- ' .. worn_items[1]:GetName() .. ' in that slot.')
				o_orig:SendToPlayer('\r\nHint: You might consider REMoving an item such as' .. s .. ' to free up some space.')
			return true
		end
end

function c:WearItem( o_orig, item )

	if( item:GetIsWearable() ~= true ) then 
		o_orig:SendToPlayer('You can\'t wear that!')	
		return false;
	end
	
	-- TODO: logic to ensure item limits/restrictions are observed
	local inventory_slots = o_orig:GetInventorySlots()
	--for i = 1, #inventory_slots do
	--	print(inventory_slots[i]:GetInventorySlot())
	--end
	
	local maybe_added = o_orig:SafeAddItem(item)
	
	if( maybe_added == inventorySlotError.noSlot ) then
		o_orig:SendToPlayer('You try to put on ' .. item:GetName() .. ' but can\'t seem to find a place to wear it.') 
		return true
		elseif ( maybe_added == inventorySlotError.itemCountExceeded ) then
			self:PrintItemCountError( o_orig, item )
			return true
		elseif ( maybe_added == inventorySlotError.itemSizeExceeded ) then
			o_orig:SendToPlayer('You try to put on ' .. item:GetName() .. ' but it seems too cumbersome to wear.') 
			return true
		else
	end
	
	o_orig:SendToPlayer('You put on ' .. item:GetName() .. '.')	
	local pname = string.gsub(o_orig:GetName(), "(%a)([%w_']*)", titleCase)
	o_orig:SendToRoom( pname .. ' puts on ' .. item:GetName() .. '.')
	--if( o_orig:GetType():lower() == 'player' ) then
	--	local player = player_cast(o_orig)
		--player:DoSave()
	--end
	return true
	
end



-- TODO: add drop left/right
-- TODO: add function to make drop code generic (i.e,, a function that can handle either hand)
-- TODO: add a swap command to compliment this command 
function c:ExecuteCommand ( o_orig, cmd )

	s_type = o_orig:GetType()
	
	if (s_type:lower() ~= "player" and s_type:lower() ~= "npc") then
		return true;
	end
	
	o = living_cast(o_orig)
	if ( o == nil ) then 
		return true 
	end	
	
	local myTable = cmd:split( ' ' )
	if #myTable < 2 then
		usage(o)
		return true;
	end
	
	-- remove wear portion
	table.remove(myTable, 1)
	
	local s1 = myTable[1]
	
	if( s1:lower() == 'my' ) then
		table.remove(myTable, 1)
	end
	
	if( #myTable == 0 ) then
		usage(o)
		return true;
	end
	
	local s1 = myTable[1]
	
	if( s1:lower() == 'right' ) then
		if( o:RightHand():IsEmpty() == false ) then
			self:WearItem( o, o:RightHand():GetItem() )
			return true
		else
			o:SendToPlayer('Wear what? Your right hand is empty.')
			return true
		end
	end
	
	if( s1:lower() == 'left' ) then
		if( o:LeftHand():IsEmpty() == false ) then
			self:WearItem( o, o:LeftHand():GetItem() )
			return true
		else
			o:SendToPlayer('Wear what? Your left hand is empty.')
			return true
		end
	end
	
	
	bfound = false
	if( o:RightHand():IsEmpty() == false ) then
		local item = o:RightHand():GetItem()--:GetItemNoun():lower()
	
		if( item:GetItemNoun():lower():starts(s1)
			or item:GetItemPluralNoun():lower():starts(s1)) then
			self:WearItem( o, o:RightHand():GetItem() )
			return true
		end

	end
	
	if( o:LeftHand():IsEmpty() == false ) then
		local item = o:LeftHand():GetItem()
	
		if( item:GetItemNoun():lower():starts(s1) 
			or item:GetItemPluralNoun():lower():starts(s1)) then
			self:WearItem( o, o:LeftHand():GetItem() )
			return true
		end
	end
	
	o:SendToPlayer('Wear what?')
	return true
end

function usage(o_orig)
	o_orig:SendToEntity('USAGE: wear <Implement me later>')
end
